{"version":3,"sources":["routes/Jeffrey_Wong_Resume.pdf","img/rainingTet.png","routes/About.js","routes/Careers.js","routes/Home.js","Navbar.js","gameHelper.js","components/styles/styledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","AppGame.js","routes/ProjectRoutes/SoloCreations.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","About","React","createElement","class","className","name","href","map","link","key","aria-hidden","value","stat","Careers","width","height","src","Home","_useState","useState","_useState2","_slicedToArray","Pdf","target","Navbar","listbtn","changeBtnBG","id","i","length","document","getElementById","classList","contains","remove","add","type","aria-controls","aria-expanded","fill","viewBox","stroke-width","stroke","stroke-linecap","stroke-linejoin","d","alt","onClick","e","aria-current","createStage","Array","from","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","pos","StyledTetrisWrapper","styled","div","_templateObject","_taggedTemplateLiteral","bgImage","StyledTetris","_templateObject2","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","B","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","resetBomb","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","explode","useEffect","sweepRows","newStage","reduce","ack","row","findIndex","cell","prev","unshift","push","prevStage","forEach","concat","collided","console","log","updateStage","StyledStage","props","StyledCell","memo","Stage","Cell","StyledDisplay","gameover","Display","gameOver","text","StyledStartButton","button","StartButton","callback","Tetris","dropTime","setDropTime","setGameOver","_usePlayer","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","_objectSpread","clonedPlayer","JSON","parse","stringify","offset","usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","_useState5","_useState6","level","setLevel","linePoints","calcScore","useGameStatus","_useGameStatus2","movePlayer","drop","move","_ref2","keyCode","maxDrop","instDrop","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","onKeyUp","features","description","AppGame","window","scrollTo","top","body","scrollHeight","behavior","fill-rule","clip-rule","feature","SoloCreations","Link","to","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","Router"],"mappings":"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","file":"static/js/main.e826cd43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Jeffrey_Wong_Resume.353666bc.pdf\";","module.exports = __webpack_public_path__ + \"static/media/rainingTet.cea0d338.png\";","import { Link } from \"react-router-dom\"\r\nimport React, { Component }  from 'react';\r\nconst About =()=>{\r\n\r\n      const links = [\r\n            { name: 'My Projects', href: '#/careers' }\r\n      ]\r\n          const stats = [\r\n            { name: 'Internships participated in last year', value: '3' },\r\n            { name: 'Sprites created for games', value: '100+' },\r\n            { name: 'Development experience', value: 'Full-Stack' },\r\n            { name: 'jeffjeff217@hotmail.com', value: 'Contact me' },\r\n          ]\r\n\r\n      return (\r\n            <div class=\"absolute inset-0 -z-10 w-full h-full bg-[url('https://cdn.discordapp.com/attachments/1029635450895339603/1145243152324759593/night-pixilart_2_scaled_40x_pngcrushed.png')] bg-scroll bg-cover overflow-y-auto\">\r\n                  \r\n\r\n                  <div className=\"pt-20\">\r\n      \r\n      {/* BELOW IS THE PURPLE BLURS THAT ARE UNEEDED */}\r\n      {/* <div\r\n        className=\"hidden sm:absolute sm:-top-10 sm:right-1/2 sm:-z-10 sm:mr-10 sm:block sm:transform-gpu sm:blur-3xl\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div\r\n          className=\"aspect-[1097/845] w-[68.5625rem] bg-gradient-to-tr from-[#ff4694] to-[#776fff] opacity-20\"\r\n          style={{\r\n            clipPath:\r\n              'polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)',\r\n          }}\r\n        />\r\n      </div> */}\r\n      {/* <div\r\n        className=\"absolute -top-52 left-1/2 -z-10 -translate-x-1/2 transform-gpu blur-3xl sm:top-[-28rem] sm:ml-16 sm:translate-x-0 sm:transform-gpu\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div\r\n          className=\"aspect-[1097/845] w-[68.5625rem] bg-gradient-to-tr from-[#ff4694] to-[#776fff] opacity-20\"\r\n          style={{\r\n            clipPath:\r\n              'polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)',\r\n          }}\r\n        />\r\n      </div> */}\r\n      <div className=\"py-10 mx-auto max-w-7xl px-6 lg:px-8\">\r\n        <div className=\"mx-auto max-w-2xl lg:mx-0\">\r\n          <h2 className=\"text-4xl font-bold tracking-tight text-white sm:text-6xl\">Hi, my name is Jeffrey Wong</h2>\r\n          <p className=\"mt-6 text-lg leading-8 text-gray-300\">\r\n          I'm 4th year statistics student who has dabbled with databases like MongoDB, \r\n          game software like Unity and statistics tools like Jupyter and Rstudio. \r\n          I'm always willing to try new things, currently I'm learning tailwindcss (Inspect this page!). \r\n          With several years of experience in coding in various languages, \r\n          I can help modernize websites, create games, analyze data and more.\r\n          </p>\r\n        </div>\r\n        <div className=\"mx-auto mt-10 max-w-2xl lg:mx-0 lg:max-w-none\">\r\n          <div className=\"grid grid-cols-1 gap-x-8 gap-y-6 text-base font-semibold leading-7 text-white sm:grid-cols-2 md:flex pl-[290px] lg:gap-x-10\">\r\n            {links.map((link) => (\r\n              <a key={link.name} href={link.href}>\r\n                {link.name} <span aria-hidden=\"true\">&rarr;</span>\r\n              </a>\r\n            ))}\r\n          </div>\r\n          <dl className=\"mt-16 grid grid-cols-1 gap-8 sm:mt-20 sm:grid-cols-2 lg:grid-cols-4\">\r\n            {stats.map((stat) => (\r\n              <div key={stat.name} className=\"flex flex-col-reverse\">\r\n                <dt className=\"text-base leading-7 text-gray-300\">{stat.name}</dt>\r\n                <dd className=\"text-2xl font-bold leading-9 tracking-tight text-white\">{stat.value}</dd>\r\n              </div>\r\n            ))}\r\n          </dl>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n      )\r\n}\r\nexport default About;","import { Link } from \"react-router-dom\"\r\nimport React, { Component }  from 'react';\r\nconst Careers =()=>{\r\n      return (\r\n            <div class=\"absolute inset-0 -z-10 w-full h-full bg-[url('https://cdn.discordapp.com/attachments/1029635450895339603/1147825303662628894/blossom-pixilart_2_scaled_40x_pngcrushed.png')] bg-scroll bg-cover overflow-y-auto\">\r\n\r\n\r\n                  \r\n<div class=\"flex flex-col py-4 px-12\">\r\n        <div class=\"py-4\">\r\n            <div class=\"pl-[116px] pr-[205px] py-8\">\r\n                <div class=\"text-7xl text-black font-bold\">My projects</div>\r\n                <div class=\"lead-xl font-light py-1\">Also called my portfolio</div>\r\n            </div>\r\n        </div>\r\n    <div class=\"flex flex-col px-5 md:px-5 lg:flex-row items-center justify-center gap-6 py-6\">\r\n        <div>\r\n        <iframe width=\"100%\" height=\"400px\" src=\"https://www.youtube.com/embed/5kt11opV8no\"/>\r\n            <div class=\"px-9 pt-10 pb-14 bg-red-200/[.95] rounded-b-lg\">\r\n                <div class=\"text-black space-y-4\">\r\n                    <h3 class=\"text-xl font-bold lead-xl bold\">AI YuGiOh Card Generator</h3>\r\n                    <div width = \"30px\" class=\"text-lg font-light\">Working as a team of 4, \r\n                        Our application uses the OpenAI image generation \r\n                        and text classification APIs \r\n                        to create art, effects, and \r\n                        other details for a YuGiOh card \r\n                        based on the card name given by the user,\r\n                        and compile the results \r\n                        for display on our web interface.</div>\r\n                </div>\r\n                <div class=\"flex justify-between pt-8\">\r\n                    {/* <ul class=\"flex flex-col gap-y-2.5\">\r\n                        <li class=\"flex space-x-3 text-white\">\r\n                            <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                            <li class=\"flex space-x-3 text-white\">\r\n                             <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                            <li class=\"flex space-x-3 text-white\">\r\n                             <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                    </ul> */}\r\n                    <div class=\"flex flex-col justify-end\">\r\n                        <a href=\"https://github.com/JeffreyWong05/ygoAIcardGenerator\" class=\"py-3 px-6 bg-white text-primary-200 paragraph-m  rounded-full\">Github Link</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        <div class=\"\">\r\n            <iframe width=\"100%\" height=\"400px\" src=\"https://www.youtube.com/embed/DYnyIHmRpmA\"/>\r\n            <div class=\"px-9 pt-10 pb-14 bg-green-200/[.95] rounded-b-lg flex-grow-1\">\r\n                <div class=\"text-black space-y-4\">\r\n                    <h3 class=\"text-xl font-bold lead-xl bold\">Plant Defence</h3>\r\n                    <div class=\"text-lg font-light\"> A short game designed in unity, our team created a tower defence game in \r\n                        2 days, I taught 3 of my members how code and build sprites from scratch, \r\n                        create collision systems, sound effects and AI.</div>\r\n                </div>\r\n                <div class=\"flex justify-between pt-8\">\r\n                   {/* <ul class=\"flex flex-col gap-y-2.5\">\r\n                        <li class=\"flex space-x-3 text-white\">\r\n                            <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                            <li class=\"flex space-x-3 text-white\">\r\n                             <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                            <li class=\"flex space-x-3 text-white\">\r\n                             <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                    </ul> */}\r\n                    <div class=\"flex flex-col justify-end\">\r\n                        <a href=\"https://github.com/JeffreyWong05/Plant-Defense\" class=\"py-3 px-6 bg-white text-primary-200 paragraph-m  rounded-full\">Github Link</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    </div>\r\n\r\n    <div class=\"flex flex-col px-5 md:px-5 lg:flex-row items-center justify-center gap-6\">\r\n        <div>\r\n        <iframe width=\"100%\" height=\"400px\" src=\"https://www.youtube.com/embed/V5uDTMGNRco\"/>\r\n            <div class=\"px-9 pt-10 pb-14  bg-red-50/[.95] rounded-b-lg\">\r\n                <div class=\"text-black space-y-4\">\r\n                    <h3 class=\"text-xl font-bold lead-xl bold\">Linear Algebra Student Aid Interface</h3>\r\n                    <div width = \"30px\" class=\"text-lg font-light\">Using React and flask, we used axios to pull data from the backend to store user input\r\n                        to perform matrix calculations on a local server. I taught and lead 3 students new to \r\n                        website development how to develop and design functions for a local website.\r\n                        \r\n                        </div>\r\n                </div>\r\n                <div class=\"flex justify-between pt-8\">\r\n                    {/* <ul class=\"flex flex-col gap-y-2.5\">\r\n                        <li class=\"flex space-x-3 text-white\">\r\n                            <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                            <li class=\"flex space-x-3 text-white\">\r\n                             <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                            <li class=\"flex space-x-3 text-white\">\r\n                             <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                    </ul> */}\r\n                    <div class=\"flex flex-col justify-end\">\r\n                        <a href=\"https://github.com/JeffreyWong05/Linear-Algebra-Student-Aid-Interface\" class=\"py-3 px-6 bg-white text-primary-200 paragraph-m  rounded-full\">Github Link</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        <div class=\"\">\r\n            <iframe width=\"100%\" height=\"400px\" src=\"https://www.youtube.com/embed/lUA6NrDILFU\"/>\r\n            <div class=\"px-9 pt-10 pb-14 bg-stone-800/[.95] rounded-b-lg flex-grow-1\">\r\n                <div class=\"text-white space-y-4\">\r\n                    <h3 class=\"text-xl font-bold lead-xl bold\">Ramen Recommender</h3>\r\n                    <div class=\"text-lg font-light\"> Based on user input, offers suggestions based on location, rating, \r\n                type of noodle, and other factors for the Ramen you want.\r\n                You can also add your own review.\r\n                I connected to MongoDB, to which I saved a database with over 2500 reviews\r\n                to be modified and edited through pycharm.</div>\r\n                </div>\r\n                <div class=\"flex justify-between pt-8\">\r\n                   {/* <ul class=\"flex flex-col gap-y-2.5\">\r\n                        <li class=\"flex space-x-3 text-white\">\r\n                            <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                            <li class=\"flex space-x-3 text-white\">\r\n                             <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                            <li class=\"flex space-x-3 text-white\">\r\n                             <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/FFFFFF/checked--v1.png\" alt=\"checked--v1\" class=\"w-6 h-6\"/>\r\n                            <span class=\"paragraph-l font-bold\">Item 1</span>\r\n                        </li>\r\n                    </ul> */}\r\n                    <div class=\"flex flex-col justify-end\">\r\n                        <a href=\"https://github.com/JeffreyWong05/Ramen-Recommender\" class=\"py-3 px-6 bg-white text-primary-200 paragraph-m  rounded-full\">Github Link</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    </div>\r\n</div>\r\n\r\n            </div>\r\n      )\r\n}\r\nexport default Careers;","import { Link } from \"react-router-dom\"\r\nimport React, { Component }  from 'react';\r\n\r\nimport { useState } from 'react'\r\n\r\nimport Pdf from '../routes/Jeffrey_Wong_Resume.pdf';\r\n\r\n\r\nconst Home =()=>{\r\n\r\n      const [mobileMenuOpen, setMobileMenuOpen] = useState(false)\r\n\r\n      const navigation = [\r\n            { name: 'Product', href: '#' },\r\n            { name: 'Features', href: '#' },\r\n            { name: 'Marketplace', href: '#' },\r\n            { name: 'Company', href: '#' },\r\n      ]\r\n          \r\n\r\n      const links = [\r\n        { name: 'Email', href: 'mailto:jeffjeff217@hotmail.com' },\r\n        { name: 'Github', href: 'https://github.com/JeffreyWong05' },\r\n        { name: 'LinkedIn', href: 'https://www.linkedin.com/in/jeffreywong05/' },\r\n      ]\r\n\r\n      return (\r\n            <div class=\"absolute inset-0 -z-10 w-full h-full bg-[url('https://cdn.discordapp.com/attachments/1029635450895339603/1144908141964820550/pixilart-SKY_scaled_40x_pngcrushed.png')] bg-scroll bg-cover overflow-y-auto\">\r\n            \r\n    \r\n    <div class=\"mx-auto max-w-2xl py-32 sm:py-48 lg:py-40\">\r\n      <div class=\"hidden sm:mb-8 sm:flex sm:justify-center\">\r\n        <div class=\"relative rounded-full px-3 py-1 text-sm leading-6 text-gray-600 ring-1 ring-gray-900/10 hover:ring-gray-900/20\">\r\n          Check out my latest project <a href=\"#/TetrisBomb\" class=\"font-semibold text-indigo-600\"><span class=\"absolute inset-0\" aria-hidden=\"true\"></span> here <span aria-hidden=\"true\">&rarr;</span></a>\r\n        </div>\r\n      </div>\r\n      <div class=\"text-center\">\r\n        <h1 class=\"text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl\">Coding whatever, whenever</h1>\r\n        <p class=\"mt-6 text-lg leading-8 text-gray-600\">A statistics specialist with interests in games and websites.</p>\r\n        <div class=\"mt-10 flex items-center justify-center gap-x-6\">\r\n          <a href=\"#/Careers\" class=\"rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Get started</a>\r\n          <a href=\"#/About\" class=\"text-sm font-semibold leading-6 text-gray-900\">Learn more <span aria-hidden=\"true\">→</span></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n\r\n    <div className=\"pb-10 justify-center object-contain grid grid-cols-1 gap-x-8 gap-y-6 text-base font-semibold leading-7 text-black sm:grid-cols-2 md:flex lg:gap-x-10\">\r\n            {links.map((link) => (\r\n              <a key={link.name} href={link.href}>\r\n                {link.name} <span aria-hidden=\"true\">&rarr;</span>\r\n              </a>\r\n            ))}\r\n            <a href = {Pdf} target = \"_blank\">My Resume &rarr;</a>\r\n    </div>\r\n\r\n      </div>\r\n      )\r\n}\r\nexport default Home;","import './Navbar.css';\r\nimport { Link } from \"react-router-dom\"\r\nimport React, { Component, useState }  from 'react';\r\nconst Navbar =()=>{\r\n\r\n      const listbtn = [\r\n        'homebtn',\r\n        'aboutbtn',\r\n        'careerbtn',\r\n        'tetrisbtn'\r\n      ];\r\n\r\n      function myFunction() {\r\n            document.getElementById(\"PFDrop\").classList.toggle(\"hidden\");\r\n      }\r\n\r\n      const changeBtnBG = (id) => {\r\n        \r\n        \r\n        for (let i=0; i < listbtn.length; i++) {\r\n          \r\n          if(listbtn[i] != id && document.getElementById(listbtn[i]).classList.contains(\"bg-gray-900\")) {\r\n            document.getElementById(listbtn[i]).classList.remove(\"bg-gray-900\");\r\n            document.getElementById(listbtn[i]).classList.add(\"text-gray-300\");\r\n            document.getElementById(listbtn[i]).classList.remove(\"text-white\");\r\n          }\r\n          else if (listbtn[i] == id) {\r\n            document.getElementById(listbtn[i]).classList.add(\"bg-gray-900\");\r\n            document.getElementById(listbtn[i]).classList.remove(\"text-gray-300\");\r\n            document.getElementById(listbtn[i]).classList.add(\"text-white\");\r\n          }\r\n        }\r\n        \r\n\r\n      }\r\n      //<div class=\"flex-container\">\r\n      //<div><Link to=\"/\"> Home </Link></div>\r\n                  \r\n      //<div><Link to=\"/about\"> About </Link></div>\r\n\r\n      //<div><Link to=\"/careers\"> Projects </Link></div>\r\n\r\n      //<div><Link to=\"/TetrisBomb\"> My Tetris </Link> </div>\r\n//</div>\r\n      return (\r\n            <div>\r\n                  \r\n\r\n\r\n\r\n\r\n                  <nav class=\"bg-gray-800\">\r\n  <div class=\"mx-auto max-w-7xl px-2 sm:px-6 lg:px-8\">\r\n    <div class=\"relative flex h-16 items-center justify-between\">\r\n      <div class=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n        {/*<!-- Mobile menu button-->*/}\r\n        <button type=\"button\" class=\"relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\" aria-controls=\"mobile-menu\" aria-expanded=\"false\">\r\n          <span class=\"absolute -inset-0.5\"></span>\r\n          <span class=\"sr-only\">Open main menu</span>\r\n          {/*<!--\r\n            Icon when menu is closed.\r\n\r\n            Menu open: \"hidden\", Menu closed: \"block\"\r\n      -->*/}\r\n          <svg class=\"block h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\" />\r\n          </svg>\r\n          {/*<!--\r\n            Icon when menu is open.\r\n\r\n            Menu open: \"block\", Menu closed: \"hidden\"\r\n-->*/}\r\n          <svg class=\"hidden h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div class=\"flex flex-1 items-center justify-center sm:items-stretch sm:justify-start\">\r\n        <div class=\"flex flex-shrink-0 items-center\">\r\n          <img class=\"h-8 w-auto\" src=\"https://cdn.discordapp.com/attachments/1029635450895339603/1144722334020817017/computer_scaled_11x_pngcrushed.png\" alt=\"Your Company\"/>\r\n        </div>\r\n        <div class=\"hidden sm:ml-6 sm:block\">\r\n          <div class=\"flex space-x-4\">\r\n            {/*<!-- Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" -->*/}\r\n            <a href=\"#\" id=\"homebtn\" onClick={e => changeBtnBG(e.target.id)} class=\"bg-gray-900 hover:bg-gray-700 hover:text-white text-white rounded-md px-3 py-2 text-sm font-medium\" aria-current=\"page\">Home</a>\r\n            <a href=\"#/about\" id=\"aboutbtn\" onClick={e => changeBtnBG(e.target.id)} class=\"text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium\">About</a>\r\n            <a href=\"#/careers\" id=\"careerbtn\" onClick={e => changeBtnBG(e.target.id)} class=\"text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium\">Projects</a>\r\n            <a href=\"#/TetrisBomb\" id=\"tetrisbtn\" onClick={e => changeBtnBG(e.target.id)} class=\"text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium\">My Tetris</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n        {/* <button type=\"button\" class=\"relative rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\">\r\n          <span class=\"absolute -inset-1.5\"></span>\r\n          <span class=\"sr-only\">View notifications</span>\r\n          <svg class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0\" />\r\n          </svg>\r\n        </button> */}\r\n\r\n        {/* <!-- Profile dropdown -->\r\n        <div class=\"relative ml-3\">\r\n          <div>\r\n            <button onClick={myFunction} type=\"button\" class=\"relative flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\" id=\"user-menu-button\" aria-expanded=\"false\" aria-haspopup=\"true\">\r\n              <span class=\"absolute -inset-1.5\"></span>\r\n              <span class=\"sr-only\">Open user menu</span>\r\n              <img class=\"h-8 w-8 rounded-full\" src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\"/>\r\n            </button>\r\n          </div>\r\n\r\n          {/*<!--\r\n            Dropdown menu, show/hide based on menu state.\r\n\r\n            Entering: \"transition ease-out duration-100\"\r\n              From: \"transform opacity-0 scale-95\"\r\n              To: \"transform opacity-100 scale-100\"\r\n            Leaving: \"transition ease-in duration-75\"\r\n              From: \"transform opacity-100 scale-100\"\r\n              To: \"transform opacity-0 scale-95\"\r\n-->\r\n          <div id=\"PFDrop\" class=\"hidden absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu-button\" tabindex=\"-1\">\r\n            {/*<!-- Active: \"bg-gray-100\", Not Active: \"\" -->\r\n            <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-0\">Your Profile</a>\r\n            <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-1\">Settings</a>\r\n            <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-2\">Sign out</a>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  {/*<!-- Mobile menu, show/hide based on menu state. -->*/}\r\n  <div class=\"sm:hidden\" id=\"mobile-menu\">\r\n    <div class=\"space-y-1 px-2 pb-3 pt-2\">\r\n      {/*<!-- Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" -->*/}\r\n      <a href=\"#\" id=\"homebtn\" onClick={e => changeBtnBG(e.target.id)} class=\"bg-gray-900 text-white block rounded-md px-3 py-2 text-base font-medium\" aria-current=\"page\">Home</a>\r\n      <a href=\"#/about\" id=\"aboutbtn\" onClick={e => changeBtnBG(e.target.id)} class=\"text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium\">About</a>\r\n      <a href=\"#/careers\" id=\"careerbtn\" onClick={e => changeBtnBG(e.target.id)} class=\"text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium\">Projects</a>\r\n      <a href=\"#/TetrisBomb\" id=\"tetrisbtn\" onClick={e => changeBtnBG(e.target.id)} class=\"text-gray-300 hover:bg-gray-700 hover:text-white block rounded-md px-3 py-2 text-base font-medium\">My Tetris</a>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n            </div>\r\n            \r\n      )\r\n}\r\nexport default Navbar;","export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\r\n  );\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n      // 1. Check that we're on an actual Tetromino cell\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          // 2. Check that our move is inside the game areas height (y)\r\n          // We shouldn't go through the bottom of the play area\r\n          !stage[y + player.pos.y + moveY] ||\r\n          // 3. Check that our move is inside the game areas width (x)\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          // 4. Check that the cell we're moving to isn't set to clear\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            'clear'\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/rainingTet.png';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n    width: 98.93vw;\r\n    height: 100vh;\r\n    background: url(${bgImage}) #000;\r\n    background-size: 750px;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const StyledTetris = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    padding: 40px;\r\n    margins: 0 auto;\r\n    max-width: 900px;\r\n\r\n    aside {\r\n        width:100%;\r\n        max-width: 200px;\r\n        display: block;\r\n        padding: 0 20px;\r\n    }\r\n`;","export const TETROMINOS = {\r\n    0: { shape: [[0]], color: '0, 0, 0'},\r\n    I: {\r\n        shape: [\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0]\r\n        ],\r\n        color: '80, 227, 230',\r\n    },\r\n    J: {\r\n        shape: [\r\n            [0, 'J', 0],\r\n            [0, 'J', 0],\r\n            ['J', 'J', 0]\r\n        ],\r\n        color: '36, 95, 223',\r\n    },\r\n    L: {\r\n        shape: [\r\n            [0, 'L', 0],\r\n            [0, 'L', 0],\r\n            [0, 'L', 'L']\r\n        ],\r\n        color: '223, 173, 36',\r\n    },\r\n    O: {\r\n        shape: [\r\n            ['O', 'O'],\r\n            ['O', 'O']\r\n        ],\r\n        color: '223, 217, 36',\r\n    },\r\n    S: {\r\n        shape: [\r\n            [0, 'S', 'S'],\r\n            ['S', 'S', 0],\r\n            [0, 0, 0]\r\n        ],\r\n        color: '48, 211, 56',\r\n    },\r\n    T: {\r\n        shape: [\r\n            [0, 0, 0],\r\n            ['T', 'T', 'T'],\r\n            [0, 'T', 0]\r\n        ],\r\n        color: '132, 61, 198',\r\n    },\r\n    Z: {\r\n        shape: [\r\n            ['Z', 'Z', 0],\r\n            [0, 'Z', 'Z'],\r\n            [0, 0, 0]\r\n        ],\r\n        color: '227, 78, 78',\r\n    },\r\n    \r\n    B: {\r\n        shape: [\r\n            [0, 0, 0],\r\n            [0, 'B', 0],\r\n            [0, 0, 0]\r\n        ],\r\n        color: '255, 255, 255',\r\n    }\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino = \r\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n    return TETROMINOS[randTetromino];\r\n}","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelper';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nexport const useStage = (player, resetPlayer, resetBomb) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n  var explode = false;\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n\r\n    const sweepRows = newStage =>\r\n      newStage.reduce((ack, row) => { //accumulator and row\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) { //if any part of the row has 0, don't clear\r\n          \r\n          \r\n          \r\n          setRowsCleared(prev => prev + 1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return ack; //return empty cell\r\n        }\r\n        ack.push(row);\r\n        return ack; //no changes to cell\r\n      }, []) //returns a completely new stage\r\n\r\n    const updateStage = prevStage => {\r\n      // First flush the stage\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\r\n      );\r\n      \r\n      \r\n      // Then draw the tetromino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          //if the bomb appears...\r\n          if (player.tetromino === TETROMINOS['B'].shape && value !== 0) {\r\n            \r\n            //updates the stage to include each pixel of the tetromino\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n            //Checks if the bomb hits another tetromino\r\n            if (player.collided && y + player.pos.y < newStage.length && \r\n              x + player.pos.x < newStage[0].length) {\r\n              console.log(\"exploded\");\r\n              explode = true;\r\n            }\r\n          } else { //otherwise draw the tetromino like normal\r\n\r\n            if (value !== 0) {\r\n              newStage[y + player.pos.y][x + player.pos.x] = [\r\n                value,\r\n                `${player.collided ? 'merged' : 'clear'}`,\r\n              ];\r\n            }\r\n\r\n          }\r\n        });\r\n      });\r\n      \r\n\r\n      // if the bomb exploded\r\n      if (explode === true) {\r\n        explode = false;\r\n        player.tetromino.forEach((row, y) => {\r\n          row.forEach((value, x) => {\r\n\r\n            if (player.collided && y + player.pos.y < newStage.length && \r\n              x + player.pos.x < newStage[0].length) {\r\n                newStage[y + player.pos.y][x + player.pos.x] = [\r\n                value,\r\n                `clear`,\r\n              ];\r\n            }\r\n          })\r\n        });\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n      // Then check if we collided\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        \r\n        newStage.reduce((ack, row) => { //if row is cleared we drop a bomb\r\n          if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n            resetBomb();\r\n          }\r\n        });\r\n\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n      return newStage;\r\n    };\r\n\r\n    setStage(prev => updateStage(prev));\r\n  }, [player, resetPlayer, resetBomb]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(\r\n        ${props => props.height},\r\n        calc(25vw / ${props => props.width})\r\n\r\n    );\r\n    grid-template-columns: repeat(${props => props.width}, 2vw);\r\n    grid-gap: 1px;\r\n    border: 2px solid #333;\r\n    width: 100%;\r\n    max-width: 25vw;\r\n    background: #111;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n    width: auto;\r\n    background: rgba(${props => props.color}, 0.8);\r\n    border: ${props => (props.type === 0 ? '0px solid' : ' 4px solid')};\r\n    border-bottom-color: rgba(${props => props.color}, 0.1);\r\n    border-right-color: rgba(${props => props.color}, 1);\r\n    border-top-color: rgba(${props => props.color}, 1);\r\n    border-left-color: rgba(${props => props.color}, 0.3);\r\n`","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nconst Cell = ({ type }) => (\r\n    <StyledCell type={type} color={TETROMINOS[type].color}/>\r\n)\r\n\r\nexport default React.memo(Cell); //only renders the cells that change with the tetromino","import React from 'react';\r\nimport { StyledStage } from './styles/StyledStage';\r\n\r\nimport Cell from './Cell';\r\n\r\nconst Stage = ({ stage }) => (\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n    </StyledStage>\r\n);\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    border:4px solid #333;\r\n    min-height: 35px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    color: ${props => (props.gameover ? 'red' : '#999')};\r\n    background: #000;\r\n    font-family: Pixel, Arial, Helvetica, sans-serif;\r\n    font-size: 0.8em;\r\n`;","import React from 'react';\r\nimport { StyledDisplay } from './styles/StyledDisplay';\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n    box-sizing: border-box;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    min-height: 30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    border: none;\r\n    color: white;\r\n    background: #333;\r\n    font-family: Pixel, Arial, Helvetica, sans-serif;\r\n    font-size: 1em;\r\n    outline:none;\r\n    cursor: pointer;\r\n`;","import React from 'react';\r\nimport { StyledStartButton } from './styles/StyledStartButton';\r\n\r\nconst StartButton = ({ callback }) => (\r\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n)\r\n\r\nexport default StartButton;","//IMPORTANT: For some reason, the space bar acts as the \"submit button' and presses the\r\n//Start button. But when I click the screen and \"focus\" on the game, it disapears.\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { createStage, checkCollision, STAGE_HEIGHT } from '../gameHelper';\r\n\r\n// styled components\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/styledTetris';\r\n\r\n// Custom Hooks\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\n\r\n// Components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\nconst Tetris = () => {\r\n\r\n    const [dropTime, setDropTime] = useState(null);\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    const [player, updatePlayerPos, resetPlayer, resetBomb, playerRotate] = usePlayer();\r\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer, resetBomb);\r\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\r\n\r\n    console.log(\"re-render\")\r\n\r\n    const movePlayer = dir => {\r\n        if(!checkCollision(player, stage, { x: dir, y: 0})) {\r\n            updatePlayerPos({ x: dir, y:0 });\r\n        }\r\n    }\r\n\r\n    const startGame = () => {\r\n        // Reset everything\r\n        setStage(createStage());\r\n        setDropTime(1000); //1000 = 1 second\r\n        resetPlayer();\r\n        setGameOver(false);\r\n        setScore(0);\r\n        setRows(0);\r\n        setLevel(0);\r\n    }\r\n    \r\n    const drop = () => {\r\n        //increase level when player has cleared 10 rows\r\n        if (rows > (level + 1) * 10) {\r\n            setLevel(prev => prev + 1);\r\n            // Also increase speed\r\n            setDropTime(1000 / (level + 1) + 200);\r\n        }\r\n\r\n        if (!checkCollision(player, stage, { x: 0, y: 1})) {\r\n            updatePlayerPos({ x: 0, y: 1, collided: false })\r\n        } else {\r\n            // Game Over\r\n            if (player.pos.y < 1) {\r\n                console.log(\"GAME OVER!!!\");\r\n                setGameOver(true);\r\n                setDropTime(null);\r\n            }\r\n            console.log(\"hit bottom\")\r\n            updatePlayerPos({ x: 0, y: 0, collided: true});\r\n            \r\n        }\r\n    }\r\n\r\n    const keyUp = ({ keyCode }) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 83) {\r\n                console.log(\"interval on\");\r\n                setDropTime(1000 / (level + 1) + 200);\r\n            }\r\n        }\r\n    }\r\n\r\n    const dropPlayer = () => {\r\n        console.log(\"interval off\");\r\n        setDropTime(null);\r\n        drop();\r\n    }\r\n\r\n    const instDrop = () => { //immediately drop the block\r\n\r\n        let maxDrop = 0;\r\n        \r\n        for (let i=0; i < STAGE_HEIGHT - player.pos.y; i++) {\r\n\r\n            if (checkCollision(player, stage, { x: 0, y: i})) {\r\n                maxDrop = i-1;\r\n                break;\r\n            }\r\n\r\n            maxDrop = i-1;\r\n        }\r\n        \r\n        updatePlayerPos({ x: 0, y: maxDrop, collided: true });\r\n        console.log(player.pos.y);\r\n        console.log(player.pos.x);\r\n    }\r\n\r\n    const move = ({ keyCode }) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 65) {\r\n                movePlayer(-1);\r\n            } else if (keyCode === 68) {\r\n                movePlayer(1); //move right\r\n            } else if (keyCode === 83) {\r\n                dropPlayer();\r\n            } else if (keyCode === 87) {\r\n                playerRotate(stage, 1);\r\n            } else if (keyCode === 16) {\r\n                instDrop();\r\n            }\r\n        }\r\n    }\r\n\r\n    useInterval(() => {\r\n        drop();\r\n    }, dropTime)\r\n\r\n    return (\r\n        <StyledTetrisWrapper \r\n        role=\"button\" \r\n        tabIndex=\"0\" \r\n        onKeyDown={e => move(e)} \r\n        onKeyUp={keyUp}>\r\n            <StyledTetris>\r\n                <Stage stage={stage}/>\r\n                <aside>\r\n                    {gameOver ? (\r\n                        <Display gameOver={gameOver} text=\"Game Over\"/>\r\n                    ): (\r\n                    <div>\r\n                        <Display text={`Score: ${score}`}/>\r\n                        <Display text={`Rows: ${rows}`}/>\r\n                        <Display text={`Level: ${level}`}/>\r\n                    </div>\r\n                    )}\r\n                    <StartButton callback={startGame} />\r\n                    <div><Display text=\"How to play: ASD Keys to move.\r\n                    W key to rotate, and SHIFT to drop immediately.\"/></div>\r\n                </aside>\r\n            </StyledTetris>\r\n        </StyledTetrisWrapper>\r\n    );\r\n};\r\n\r\nexport default Tetris;","import { useState, useCallback } from 'react';\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelper';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  const rotate = (matrix, dir) => {\r\n    // Make the rows to become cols (transpose)\r\n    const rotatedTetro = matrix.map((_, index) => \r\n        matrix.map(col => col[index]),\r\n    );\r\n    // Reverse each row to get a rotated matrix\r\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\r\n    return rotatedTetro.reverse();\r\n  }\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n        clonedPlayer.pos.x += offset;\r\n        offset = -(offset + (offset > 0 ? 1 : -1));\r\n        if (offset > clonedPlayer.tetromino[0].length) {\r\n            rotate(clonedPlayer.tetromino, -dir);\r\n            clonedPlayer.pos.x = pos;\r\n            return;\r\n        }\r\n    }\r\n\r\n    setPlayer(clonedPlayer);\r\n  }\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\r\n      collided,\r\n    }))\r\n  }\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    })\r\n  }, [])\r\n  \r\n  const resetBomb = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: TETROMINOS['B'].shape,\r\n      collided: false,\r\n    })\r\n  }, [])\r\n\r\n  return [player, updatePlayerPos, resetPlayer,resetBomb, playerRotate];\r\n}","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n    const [score, setScore] = useState(0);\r\n    const [rows, setRows] = useState(0);\r\n    const [level, setLevel] = useState(0);\r\n\r\n    const linePoints = [40, 100, 300 , 1200];\r\n\r\n    const calcScore = useCallback(() => {\r\n        // We have score\r\n        if (rowsCleared > 0) {\r\n            // This is how original tetris score is calculated\r\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n            setRows(prev => prev + rowsCleared);\r\n        }\r\n    }, [level, linePoints, rowsCleared]);\r\n\r\n    useEffect(() => {\r\n        calcScore();\r\n    }, [calcScore, rowsCleared, score]);\r\n\r\n    return [score, setScore, rows, setRows, level, setLevel];\r\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\r\nimport Tetris from './components/Tetris';\r\n\r\nconst features = [\r\n    {\r\n      name: 'The controls',\r\n      description:\r\n        'Press the start button to begin. Use the arrow keys to move the tetromino (the blocks) and the up key to rotate. Press shift to drop the tetromino immediately.',\r\n      //icon: CloudArrowUpIcon,\r\n    },\r\n    {\r\n      name: 'Increasing difficulty',\r\n      description: 'As the level increases, so does the speed of the tetromino. Aim for a high score!',\r\n      //icon: LockClosedIcon,\r\n    },\r\n    {\r\n      name: 'Made using react.',\r\n      description: 'Done all on a static website, and coded purely in javascript, by using extentions like styled-components. Designed my own functions and special tetromino.',\r\n      //icon: ServerIcon,\r\n    },\r\n  ]\r\n\r\n  const scrolltoBot = () => {\r\n    window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' })\r\n  }\r\n\r\n\r\nconst AppGame = () => (\r\n    <div className=\"bg-[url('https://cdn.discordapp.com/attachments/1029635450895339603/1150339413570768907/falling-tetrominos-pixilart_scaled_40x_pngcrushed.png')] bg-[length:700px_817px]\">\r\n\r\n        <div className=\"overflow-hidden py-5 sm:py-10\">\r\n      <div className=\"mx-auto max-w-7xl px-6 lg:px-8\">\r\n        <div className=\"mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 sm:gap-y-20 lg:mx-0 lg:max-w-none lg:grid-cols-2\">\r\n          <div className=\"lg:pr-8 lg:pt-4\">\r\n            <div className=\"lg:max-w-lg bg-white p-2 rounded-lg\">\r\n              <h2 className=\"text-base font-semibold leading-7 text-indigo-600\">Welcome to</h2>\r\n              <p className=\"mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">Tetris, almost</p>\r\n              <p className=\"mt-6 text-lg leading-8 text-gray-600\">\r\n              Tetris with my own twist! If you clear one or more rows a special object appears.\r\n            Try my game to find out what it does!\r\n              </p>\r\n\r\n              <button type=\"button\" onClick={e => scrolltoBot()} class=\"inline-flex items-center rounded-md bg-indigo-600 mt-5 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">\r\n        <svg class=\"-ml-0.5 mr-1.5 h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n          <path fill-rule=\"evenodd\" d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\" clip-rule=\"evenodd\" />\r\n        </svg>\r\n        Play now!\r\n      </button>\r\n\r\n              <dl className=\"mt-5 max-w-xl space-y-8 text-base leading-7 text-gray-600 lg:max-w-none\">\r\n                {features.map((feature) => (\r\n                  <div key={feature.name} className=\"relative pl-9\">\r\n                    <dt className=\"inline font-semibold text-gray-900\">\r\n                      {/* <feature.icon className=\"absolute left-1 top-1 h-5 w-5 text-indigo-600\" aria-hidden=\"true\" /> */}\r\n                      {feature.name}\r\n                    </dt>{' '}\r\n                    <dd className=\"inline\">{feature.description}</dd>\r\n                  </div>\r\n                ))}\r\n              </dl>\r\n            </div>\r\n          </div>\r\n          <img\r\n            src=\"https://cdn.discordapp.com/attachments/1029635450895339603/1150347169409286215/image.png\"\r\n            alt=\"Product screenshot\"\r\n            className=\"border-double border-4 border-white w-[48rem] max-w-none rounded-xl shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem] md:-ml-4 lg:-ml-0\"\r\n            width={2432}\r\n            height={1442}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n        <Tetris />\r\n    </div>\r\n\r\n);\r\n\r\nexport default AppGame;","import './SoloCreations.css';\r\nimport { Link } from \"react-router-dom\"\r\nimport React, { Component }  from 'react';\r\nconst SoloCreations =()=>{\r\n      return (\r\n            \r\n        <div>\r\n            <h1>Projects</h1>\r\n            <div class=\"flex-container2\">\r\n            <div><Link to=\"/Careers\"> Hackathons </Link></div>\r\n        \r\n            <div><Link to=\"/Careers/OtherProjects\"> Other Projects </Link></div>\r\n        \r\n            </div>\r\n\r\n            <h3>Ramen Recommender</h3>\r\n\r\n            <img src='https://cdn.discordapp.com/attachments/1029635450895339603/1125733121980108830/image.png' width=\"500\" height=\"300\"/>\r\n\r\n            <p>Based on user input, offers suggestions based on location, rating, \r\n                type of noodle, and other factors for the Ramen you want.\r\n                You can also add your own review.\r\n                I connected to MongoDB, to which I saved a database with 2500 reviews\r\n                to be modified and edited through pycharm.</p>\r\n\r\n            \r\n        </div>\r\n      )\r\n}\r\nexport default SoloCreations;","import './App.css';\nimport { BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Careers from \"./routes/Careers\";\nimport Home from \"./routes/Home\";\nimport Navbar from './Navbar';\nimport AppGame from './AppGame';\nimport React, { Component }  from 'react';\nimport SoloCreations from './routes/ProjectRoutes/SoloCreations';\nfunction App() {\n  return (\n    <div className='App'>\n      \n      <Navbar />\n      \n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/careers\" element={<Careers />} />\n        <Route path=\"/TetrisBomb\" element={<AppGame />} />\n        <Route path=\"/Careers/OtherProjects\" element={<SoloCreations/>} />\n      </Routes>\n    </div>\n  );\n}\n\n\nexport default App;\n\n//","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './assets/main.css'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Router>\n      \n      <App />\n    </Router>\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example, reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}