{"version":3,"sources":["img/bg.png","routes/About.js","routes/Careers.js","routes/Home.js","Navbar.js","gameHelper.js","components/styles/styledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","AppGame.js","routes/ProjectRoutes/SoloCreations.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","About","React","createElement","Careers","class","Link","to","width","height","src","Home","Navbar","createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","_templateObject","_taggedTemplateLiteral","bgImage","StyledTetris","_templateObject2","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","B","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","resetBomb","_useState","useState","_useState2","_slicedToArray","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","explode","useEffect","sweepRows","newStage","reduce","ack","row","findIndex","cell","prev","unshift","push","prevStage","map","forEach","value","concat","collided","console","log","updateStage","StyledStage","props","StyledCell","type","memo","Stage","Cell","key","StyledDisplay","gameover","Display","gameOver","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","_usePlayer","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","_objectSpread","clonedPlayer","JSON","parse","stringify","offset","usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","_useState5","_useState6","level","setLevel","linePoints","calcScore","useGameStatus","_useGameStatus2","movePlayer","drop","move","_ref2","keyCode","maxDrop","i","instDrop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","AppGame","className","SoloCreations","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.00491fd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","import { Link } from \"react-router-dom\"\r\nimport React, { Component }  from 'react';\r\nconst About =()=>{\r\n      return (\r\n            <div>\r\n                  \r\n                  <p>I'm Jeffrey, a statistics specialist currently studying at UTSC.\r\n                    Take a look at some of my work in projects.\r\n                  </p>\r\n            </div>\r\n      )\r\n}\r\nexport default About;","import { Link } from \"react-router-dom\"\r\nimport React, { Component }  from 'react';\r\nconst Careers =()=>{\r\n      return (\r\n            <div>\r\n                  <h1>Projects</h1>\r\n                  <div class=\"flex-container2\">\r\n                  <div><Link to=\"/Careers\"> Hackathons </Link></div>\r\n                  \r\n                  <div><Link to=\"/Careers/OtherProjects\"> Other Projects </Link></div>\r\n                  \r\n            </div>\r\n                  <h3>AI YuGiOh Card Generator</h3>\r\n                  <p>\r\n                        <iframe width=\"500\" height=\"345\" src=\"https://www.youtube.com/embed/5kt11opV8no\">\r\n                        </iframe>\r\n                        <div></div>\r\n                        Working as a team of 4, \r\n                        Our application uses the OpenAI image generation and text classification APIs \r\n                        to create art, effects, and other details for a YuGiOh card \r\n                        based on the card name given by the user, and compile the results \r\n                        for display on our web interface.\r\n\r\n                  </p>\r\n                  <div></div>\r\n                  <h3>Plant Defence</h3>\r\n                  <p>\r\n                        <iframe width=\"500\" height=\"345\" src=\"https://www.youtube.com/embed/DYnyIHmRpmA\">\r\n                        </iframe>\r\n                        <div></div>\r\n                        A short game designed in unity, our team created a tower defence game in \r\n                        2 days, I taught 3 of my members how code and build sprites from scratch, \r\n                        create collision systems, sound effects and AI.\r\n                        \r\n                  </p>\r\n                  \r\n                  <h3>Linear Algebra Student Aid Interface</h3>\r\n                  <p>\r\n                  <iframe width=\"500\" height=\"345\" src=\"https://www.youtube.com/embed/V5uDTMGNRco\">\r\n                        </iframe>\r\n                        <div></div>\r\n                        Using React and flask, we used axios to pull data from the backend to store user input\r\n                        to perform matrix calculations on a local server. \r\n                  </p>\r\n\r\n            </div>\r\n      )\r\n}\r\nexport default Careers;","import { Link } from \"react-router-dom\"\r\nimport React, { Component }  from 'react';\r\n\r\n\r\nconst Home =()=>{\r\n      return (\r\n            <div>\r\n                  \r\n                  <h2>Hi, my name is Jeffrey Wong. Welcome to my website!</h2>\r\n                  <p>Check out my most recent project of my modified <Link to=\"/TetrisBomb\"> Tetris!</Link> Also feel free to \r\n                        click one of the links above to get started!</p>\r\n\r\n            </div>\r\n      )\r\n}\r\nexport default Home;","import './Navbar.css';\r\nimport { Link } from \"react-router-dom\"\r\nimport React, { Component }  from 'react';\r\nconst Navbar =()=>{\r\n      return (\r\n            <div class=\"flex-container\">\r\n                  <div><Link to=\"/\"> Home </Link></div>\r\n                  \r\n                  <div><Link to=\"/about\"> About </Link></div>\r\n                  \r\n                  <div><Link to=\"/careers\"> Projects </Link></div>\r\n\r\n                  <div><Link to=\"/TetrisBomb\"> My Tetris </Link> </div>\r\n            </div>\r\n      )\r\n}\r\nexport default Navbar;","export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\r\n  );\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n      // 1. Check that we're on an actual Tetromino cell\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          // 2. Check that our move is inside the game areas height (y)\r\n          // We shouldn't go through the bottom of the play area\r\n          !stage[y + player.pos.y + moveY] ||\r\n          // 3. Check that our move is inside the game areas width (x)\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          // 4. Check that the cell we're moving to isn't set to clear\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            'clear'\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/bg.png';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n    width: 98.93vw;\r\n    height: 95vh;\r\n    background: url(${bgImage}) #000;\r\n    background-size: cover;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const StyledTetris = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    padding: 40px;\r\n    margins: 0 auto;\r\n    max-width: 900px;\r\n\r\n    aside {\r\n        width:100%;\r\n        max-width: 200px;\r\n        display: block;\r\n        padding: 0 20px;\r\n    }\r\n`;","export const TETROMINOS = {\r\n    0: { shape: [[0]], color: '0, 0, 0'},\r\n    I: {\r\n        shape: [\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0]\r\n        ],\r\n        color: '80, 227, 230',\r\n    },\r\n    J: {\r\n        shape: [\r\n            [0, 'J', 0],\r\n            [0, 'J', 0],\r\n            ['J', 'J', 0]\r\n        ],\r\n        color: '36, 95, 223',\r\n    },\r\n    L: {\r\n        shape: [\r\n            [0, 'L', 0],\r\n            [0, 'L', 0],\r\n            [0, 'L', 'L']\r\n        ],\r\n        color: '223, 173, 36',\r\n    },\r\n    O: {\r\n        shape: [\r\n            ['O', 'O'],\r\n            ['O', 'O']\r\n        ],\r\n        color: '223, 217, 36',\r\n    },\r\n    S: {\r\n        shape: [\r\n            [0, 'S', 'S'],\r\n            ['S', 'S', 0],\r\n            [0, 0, 0]\r\n        ],\r\n        color: '48, 211, 56',\r\n    },\r\n    T: {\r\n        shape: [\r\n            [0, 0, 0],\r\n            ['T', 'T', 'T'],\r\n            [0, 'T', 0]\r\n        ],\r\n        color: '132, 61, 198',\r\n    },\r\n    Z: {\r\n        shape: [\r\n            ['Z', 'Z', 0],\r\n            [0, 'Z', 'Z'],\r\n            [0, 0, 0]\r\n        ],\r\n        color: '227, 78, 78',\r\n    },\r\n    \r\n    B: {\r\n        shape: [\r\n            [0, 0, 0],\r\n            [0, 'B', 0],\r\n            [0, 0, 0]\r\n        ],\r\n        color: '255, 255, 255',\r\n    }\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino = \r\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n    return TETROMINOS[randTetromino];\r\n}","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelper';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nexport const useStage = (player, resetPlayer, resetBomb) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n  var explode = false;\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n\r\n    const sweepRows = newStage =>\r\n      newStage.reduce((ack, row) => { //accumulator and row\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) { //if any part of the row has 0, don't clear\r\n          \r\n          \r\n          \r\n          setRowsCleared(prev => prev + 1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return ack; //return empty cell\r\n        }\r\n        ack.push(row);\r\n        return ack; //no changes to cell\r\n      }, []) //returns a completely new stage\r\n\r\n    const updateStage = prevStage => {\r\n      // First flush the stage\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\r\n      );\r\n      \r\n      \r\n      // Then draw the tetromino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          //if the bomb appears...\r\n          if (player.tetromino === TETROMINOS['B'].shape && value !== 0) {\r\n            \r\n            //updates the stage to include each pixel of the tetromino\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n            //Checks if the bomb hits another tetromino\r\n            if (player.collided && y + player.pos.y < newStage.length && \r\n              x + player.pos.x < newStage[0].length) {\r\n              console.log(\"exploded\");\r\n              explode = true;\r\n            }\r\n          } else { //otherwise draw the tetromino like normal\r\n\r\n            if (value !== 0) {\r\n              newStage[y + player.pos.y][x + player.pos.x] = [\r\n                value,\r\n                `${player.collided ? 'merged' : 'clear'}`,\r\n              ];\r\n            }\r\n\r\n          }\r\n        });\r\n      });\r\n      \r\n\r\n      // if the bomb exploded\r\n      if (explode === true) {\r\n        explode = false;\r\n        player.tetromino.forEach((row, y) => {\r\n          row.forEach((value, x) => {\r\n\r\n            if (player.collided && y + player.pos.y < newStage.length && \r\n              x + player.pos.x < newStage[0].length) {\r\n                newStage[y + player.pos.y][x + player.pos.x] = [\r\n                value,\r\n                `clear`,\r\n              ];\r\n            }\r\n          })\r\n        });\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n      // Then check if we collided\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        \r\n        newStage.reduce((ack, row) => { //if row is cleared we drop a bomb\r\n          if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n            resetBomb();\r\n          }\r\n        });\r\n\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n      return newStage;\r\n    };\r\n\r\n    setStage(prev => updateStage(prev));\r\n  }, [player, resetPlayer, resetBomb]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(\r\n        ${props => props.height},\r\n        calc(25vw / ${props => props.width})\r\n\r\n    );\r\n    grid-template-columns: repeat(${props => props.width}, 2vw);\r\n    grid-gap: 1px;\r\n    border: 2px solid #333;\r\n    width: 100%;\r\n    max-width: 25vw;\r\n    background: #111;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n    width: auto;\r\n    background: rgba(${props => props.color}, 0.8);\r\n    border: ${props => (props.type === 0 ? '0px solid' : ' 4px solid')};\r\n    border-bottom-color: rgba(${props => props.color}, 0.1);\r\n    border-right-color: rgba(${props => props.color}, 1);\r\n    border-top-color: rgba(${props => props.color}, 1);\r\n    border-left-color: rgba(${props => props.color}, 0.3);\r\n`","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nconst Cell = ({ type }) => (\r\n    <StyledCell type={type} color={TETROMINOS[type].color}/>\r\n)\r\n\r\nexport default React.memo(Cell); //only renders the cells that change with the tetromino","import React from 'react';\r\nimport { StyledStage } from './styles/StyledStage';\r\n\r\nimport Cell from './Cell';\r\n\r\nconst Stage = ({ stage }) => (\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n    </StyledStage>\r\n);\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    border:4px solid #333;\r\n    min-height: 35px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    color: ${props => (props.gameover ? 'red' : '#999')};\r\n    background: #000;\r\n    font-family: Pixel, Arial, Helvetica, sans-serif;\r\n    font-size: 0.8em;\r\n`;","import React from 'react';\r\nimport { StyledDisplay } from './styles/StyledDisplay';\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n    box-sizing: border-box;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    min-height: 30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    border: none;\r\n    color: white;\r\n    background: #333;\r\n    font-family: Pixel, Arial, Helvetica, sans-serif;\r\n    font-size: 1em;\r\n    outline:none;\r\n    cursor: pointer;\r\n`;","import React from 'react';\r\nimport { StyledStartButton } from './styles/StyledStartButton';\r\n\r\nconst StartButton = ({ callback }) => (\r\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n)\r\n\r\nexport default StartButton;","import React, { useState } from 'react';\r\n\r\nimport { createStage, checkCollision, STAGE_HEIGHT } from '../gameHelper';\r\n\r\n// styled components\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/styledTetris';\r\n\r\n// Custom Hooks\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\n\r\n// Components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\nconst Tetris = () => {\r\n\r\n    const [dropTime, setDropTime] = useState(null);\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    const [player, updatePlayerPos, resetPlayer, resetBomb, playerRotate] = usePlayer();\r\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer, resetBomb);\r\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\r\n\r\n    console.log(\"re-render\")\r\n\r\n    const movePlayer = dir => {\r\n        if(!checkCollision(player, stage, { x: dir, y: 0})) {\r\n            updatePlayerPos({ x: dir, y:0 });\r\n        }\r\n    }\r\n\r\n    const startGame = () => {\r\n        // Reset everything\r\n        setStage(createStage());\r\n        setDropTime(1000); //1000 = 1 second\r\n        resetPlayer();\r\n        setGameOver(false);\r\n        setScore(0);\r\n        setRows(0);\r\n        setLevel(0);\r\n    }\r\n    \r\n    const drop = () => {\r\n        //increase level when player has cleared 10 rows\r\n        if (rows > (level + 1) * 10) {\r\n            setLevel(prev => prev + 1);\r\n            // Also increase speed\r\n            setDropTime(1000 / (level + 1) + 200);\r\n        }\r\n\r\n        if (!checkCollision(player, stage, { x: 0, y: 1})) {\r\n            updatePlayerPos({ x: 0, y: 1, collided: false })\r\n        } else {\r\n            // Game Over\r\n            if (player.pos.y < 1) {\r\n                console.log(\"GAME OVER!!!\");\r\n                setGameOver(true);\r\n                setDropTime(null);\r\n            }\r\n            console.log(\"hit bottom\")\r\n            updatePlayerPos({ x: 0, y: 0, collided: true});\r\n            \r\n        }\r\n    }\r\n\r\n    const keyUp = ({ keyCode }) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 83 || keyCode === 32) {\r\n                console.log(\"interval on\");\r\n                setDropTime(1000 / (level + 1) + 200);\r\n            }\r\n        }\r\n    }\r\n\r\n    const dropPlayer = () => {\r\n        console.log(\"interval off\");\r\n        setDropTime(null);\r\n        drop();\r\n    }\r\n\r\n    const instDrop = () => { //immediately drop the block\r\n        console.log(player.pos.y);\r\n\r\n        let maxDrop = 0;\r\n        \r\n        for (let i=0; i < STAGE_HEIGHT - player.pos.y; i++) {\r\n\r\n            console.log(!checkCollision(player, stage, { x: 0, y: i}));\r\n            console.log(i);\r\n\r\n            if (checkCollision(player, stage, { x: 0, y: i})) {\r\n                maxDrop = i-1;\r\n                break;\r\n            }\r\n\r\n            maxDrop = i-1;\r\n        }\r\n        \r\n        updatePlayerPos({ x: 0, y: maxDrop, collided: true });\r\n        \r\n    }\r\n\r\n    const move = ({ keyCode }) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 65) {\r\n                movePlayer(-1);\r\n            } else if (keyCode === 68) {\r\n                movePlayer(1); //move right\r\n            } else if (keyCode === 83) {\r\n                dropPlayer();\r\n            } else if (keyCode === 87) {\r\n                playerRotate(stage, 1);\r\n            } else if (keyCode === 32) {\r\n                instDrop();\r\n            }\r\n        }\r\n    }\r\n\r\n    useInterval(() => {\r\n        drop();\r\n    }, dropTime)\r\n\r\n    return (\r\n        <StyledTetrisWrapper \r\n        role=\"button\" \r\n        tabIndex=\"0\" \r\n        onKeyDown={e => move(e)} \r\n        onKeyUp={keyUp}>\r\n            <StyledTetris>\r\n                <Stage stage={stage}/>\r\n                <aside>\r\n                    {gameOver ? (\r\n                        <Display gameOver={gameOver} text=\"Game Over\"/>\r\n                    ): (\r\n                    <div>\r\n                        <Display text={`Score: ${score}`}/>\r\n                        <Display text={`Rows: ${rows}`}/>\r\n                        <Display text={`Level: ${level}`}/>\r\n                    </div>\r\n                    )}\r\n                    <StartButton callback={startGame} />\r\n                    <div><Display text=\"How to play: ASD Keys to move.\r\n                    W key to rotate, and space bar to drop immediately.\"/></div>\r\n                </aside>\r\n            </StyledTetris>\r\n        </StyledTetrisWrapper>\r\n    );\r\n};\r\n\r\nexport default Tetris;","import { useState, useCallback } from 'react';\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelper';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  const rotate = (matrix, dir) => {\r\n    // Make the rows to become cols (transpose)\r\n    const rotatedTetro = matrix.map((_, index) => \r\n        matrix.map(col => col[index]),\r\n    );\r\n    // Reverse each row to get a rotated matrix\r\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\r\n    return rotatedTetro.reverse();\r\n  }\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n        clonedPlayer.pos.x += offset;\r\n        offset = -(offset + (offset > 0 ? 1 : -1));\r\n        if (offset > clonedPlayer.tetromino[0].length) {\r\n            rotate(clonedPlayer.tetromino, -dir);\r\n            clonedPlayer.pos.x = pos;\r\n            return;\r\n        }\r\n    }\r\n\r\n    setPlayer(clonedPlayer);\r\n  }\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\r\n      collided,\r\n    }))\r\n  }\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    })\r\n  }, [])\r\n  \r\n  const resetBomb = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: TETROMINOS['B'].shape,\r\n      collided: false,\r\n    })\r\n  }, [])\r\n\r\n  return [player, updatePlayerPos, resetPlayer,resetBomb, playerRotate];\r\n}","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n    const [score, setScore] = useState(0);\r\n    const [rows, setRows] = useState(0);\r\n    const [level, setLevel] = useState(0);\r\n\r\n    const linePoints = [40, 100, 300 , 1200];\r\n\r\n    const calcScore = useCallback(() => {\r\n        // We have score\r\n        if (rowsCleared > 0) {\r\n            // This is how original tetris score is calculated\r\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n            setRows(prev => prev + rowsCleared);\r\n        }\r\n    }, [level, linePoints, rowsCleared]);\r\n\r\n    useEffect(() => {\r\n        calcScore();\r\n    }, [calcScore, rowsCleared, score]);\r\n\r\n    return [score, setScore, rows, setRows, level, setLevel];\r\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\r\nimport Tetris from './components/Tetris';\r\n\r\nconst AppGame = () => (\r\n    <div className=\"AppGame\">\r\n        <p>Tetris with my own twist! If you clear one or more rows a special object appears.\r\n            Try my game to find out what it does!\r\n        </p>\r\n        <Tetris />\r\n    </div>\r\n\r\n);\r\n\r\nexport default AppGame;","import './SoloCreations.css';\r\nimport { Link } from \"react-router-dom\"\r\nimport React, { Component }  from 'react';\r\nconst SoloCreations =()=>{\r\n      return (\r\n            \r\n        <div>\r\n            <h1>Projects</h1>\r\n            <div class=\"flex-container2\">\r\n            <div><Link to=\"/Careers\"> Hackathons </Link></div>\r\n        \r\n            <div><Link to=\"/Careers/OtherProjects\"> Other Projects </Link></div>\r\n        \r\n            </div>\r\n\r\n            <h3>Ramen Recommender</h3>\r\n\r\n            <img src='https://cdn.discordapp.com/attachments/1029635450895339603/1125733121980108830/image.png' width=\"500\" height=\"300\"/>\r\n\r\n            <p>Based on user input, offers suggestions based on location, rating, \r\n                type of noodle, and other factors for the Ramen you want.\r\n                You can also add your own review.\r\n                I connected to MongoDB, to which I saved a database with 2500 reviews\r\n                to be modified and edited through pycharm.</p>\r\n\r\n            \r\n        </div>\r\n      )\r\n}\r\nexport default SoloCreations;","import './App.css';\nimport { BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Careers from \"./routes/Careers\";\nimport Home from \"./routes/Home\";\nimport Navbar from './Navbar';\nimport AppGame from './AppGame';\nimport React, { Component }  from 'react';\nimport SoloCreations from './routes/ProjectRoutes/SoloCreations';\nfunction App() {\n  return (\n    <div className='App'>\n      \n      <Navbar />\n      \n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/careers\" element={<Careers />} />\n        <Route path=\"/TetrisBomb\" element={<AppGame />} />\n        <Route path=\"/Careers/OtherProjects\" element={<SoloCreations/>} />\n      </Routes>\n\n    \n    </div>\n  );\n}\n\n\nexport default App;\n\n//","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Router>\n      <App />\n    </Router>\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example, reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}